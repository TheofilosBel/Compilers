Package compiler;

Helpers

  all= [0 .. 127]
  sp = ' ';
  lf = 0x000a;
  cr = 0x000d;
  ff = 0x000c;
  ht = 0x0009; 

    sp          = ' ';
    tab         = 9;
    lf          = 10;
    ff          = 12;
    cr          = 13; 
    eol         = lf | cr | cr lf;
    not_eol     = [all - [cr + lf]];

  line_terminator = lf | cr | cr lf;
  white_space = (sp | ht | ff | line_terminator)*;
  
  underscore = '_';
  lagg	= '[';
  ragg	= ']';
  letter = ['a' .. 'z'];
  digit	= ['0' .. '9'];
  nondigit = ['_' + [['a' .. 'z'] + ['A' .. 'Z']]] 
  namepart = ( letter | digit )*;

  /* Comments */
  not_dollar        = [all - '$']
  not_double_dollar = [all - '$$']
  
Tokens

    white_space	= white_space;
    
    l_par 	  = '(';
    r_par 	  = ')';
    l_bracket = '[';
    r_bracket = ']';
    l_brace   = '{';
    r_brace   = '}';
    colon     = ':';
    semicolon = ';';
    comma     = ',';
    
    /* Keywords */
    kw_and	   = 'and';
    kw_or	   = 'or';
    kw_int	   = 'int';
    kw_then    = 'then';
    kw_char	   = 'char';
    kw_mod	   = 'mod';
    kw_var	   = 'var';
    kw_div	   = 'div';
    kw_not	   = 'not';
    kw_while   = 'while';
    kw_do      = 'do';
    kw_if	   = 'if';
    kw_else	   = 'else';
    kw_fun	   = 'fun';
    kw_return  = 'return';
    kw_ref	   = 'ref';
    kw_nothing = 'nothing';

    identifier = letter+ ( (underscore namepart) | namepart )*; /* Remove */
    /* identifier = nondigit (digit | nondigit)*; */
    integer = digit+;
    
Ignored Tokens
    white_space;

Productions
 
	program =
        {one} variable_definition+;
	
	variable_definition = 
		{def} var set_of_variables colon type semicolon;
		
	set_of_variables =
		{multi_set} identifier comma set_of_variables |
		{single_set} identifier;

	type = 
		{simple}  data_type |
		{array}   data_type array_declaration
		;

	data_type = 
		{t_int} int |
		{t_char} char;