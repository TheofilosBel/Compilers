/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiler.node;

import compiler.analysis.*;

@SuppressWarnings("nls")
public final class APosSignedFactor extends PSignedFactor
{
    private TPlus _plus_;
    private PSignedFactor _signedFactor_;

    public APosSignedFactor()
    {
        // Constructor
    }

    public APosSignedFactor(
        @SuppressWarnings("hiding") TPlus _plus_,
        @SuppressWarnings("hiding") PSignedFactor _signedFactor_)
    {
        // Constructor
        setPlus(_plus_);

        setSignedFactor(_signedFactor_);

    }

    @Override
    public Object clone()
    {
        return new APosSignedFactor(
            cloneNode(this._plus_),
            cloneNode(this._signedFactor_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPosSignedFactor(this);
    }

    public TPlus getPlus()
    {
        return this._plus_;
    }

    public void setPlus(TPlus node)
    {
        if(this._plus_ != null)
        {
            this._plus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._plus_ = node;
    }

    public PSignedFactor getSignedFactor()
    {
        return this._signedFactor_;
    }

    public void setSignedFactor(PSignedFactor node)
    {
        if(this._signedFactor_ != null)
        {
            this._signedFactor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._signedFactor_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._plus_)
            + toString(this._signedFactor_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._plus_ == child)
        {
            this._plus_ = null;
            return;
        }

        if(this._signedFactor_ == child)
        {
            this._signedFactor_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._plus_ == oldChild)
        {
            setPlus((TPlus) newChild);
            return;
        }

        if(this._signedFactor_ == oldChild)
        {
            setSignedFactor((PSignedFactor) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
