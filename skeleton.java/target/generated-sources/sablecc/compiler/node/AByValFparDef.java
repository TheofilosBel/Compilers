/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiler.node;

import compiler.analysis.*;

@SuppressWarnings("nls")
public final class AByValFparDef extends PFparDef
{
    private PIdList _idList_;
    private TColon _colon_;
    private PDataType _dataType_;

    public AByValFparDef()
    {
        // Constructor
    }

    public AByValFparDef(
        @SuppressWarnings("hiding") PIdList _idList_,
        @SuppressWarnings("hiding") TColon _colon_,
        @SuppressWarnings("hiding") PDataType _dataType_)
    {
        // Constructor
        setIdList(_idList_);

        setColon(_colon_);

        setDataType(_dataType_);

    }

    @Override
    public Object clone()
    {
        return new AByValFparDef(
            cloneNode(this._idList_),
            cloneNode(this._colon_),
            cloneNode(this._dataType_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAByValFparDef(this);
    }

    public PIdList getIdList()
    {
        return this._idList_;
    }

    public void setIdList(PIdList node)
    {
        if(this._idList_ != null)
        {
            this._idList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._idList_ = node;
    }

    public TColon getColon()
    {
        return this._colon_;
    }

    public void setColon(TColon node)
    {
        if(this._colon_ != null)
        {
            this._colon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colon_ = node;
    }

    public PDataType getDataType()
    {
        return this._dataType_;
    }

    public void setDataType(PDataType node)
    {
        if(this._dataType_ != null)
        {
            this._dataType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dataType_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._idList_)
            + toString(this._colon_)
            + toString(this._dataType_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._idList_ == child)
        {
            this._idList_ = null;
            return;
        }

        if(this._colon_ == child)
        {
            this._colon_ = null;
            return;
        }

        if(this._dataType_ == child)
        {
            this._dataType_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._idList_ == oldChild)
        {
            setIdList((PIdList) newChild);
            return;
        }

        if(this._colon_ == oldChild)
        {
            setColon((TColon) newChild);
            return;
        }

        if(this._dataType_ == oldChild)
        {
            setDataType((PDataType) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
